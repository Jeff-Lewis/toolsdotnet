#summary Notes while reading Oracle TimesTen documentation.
#labels oracle
<wiki:toc max_depth="1" />
= Proposed hands ons =
== Have a windbg lab to see where timesten is located when it runs in the direct link mode. ==

"An application can create a direct driver connection when it runs on the same
machine as the TimesTen database. In a direct driver connection, the ODBC
driver directly loads the TimesTen database into either the applicationâ€™s heap
space or a shared memory segment. The application then uses the direct driver to
access the memory image of the database. Because no inter-process
communication (IPC) of any kind is required, a direct-driver connection provides
extremely fast performance and is the preferred way for applications to access
TimesTen databases."

= Connection types =
If I understand it correctly then, MS ODBC .NET driver should be using the "Driver manager connection" option. It is only layer of indirection and should still correspond to the direct link if accessed from the same machine. This to be verified by [#Proposed hands ons]

= To clarify = 
== What !TimesTen windows service is exactly serving for ==

= Oops! =
== Read committed isolation ==
Desription of Read commited default contradicts to my standard understanding of the READ COMMITTED isolation level:
Oracle:

_"Read committed isolation_


_When an application uses read committed isolation, readers use a separate copy
of the data from writers, so read locks are not needed. Read committed isolation
is non-blocking for queries and can work with Serializable isolation or read
committed isolation. Under read committed isolation, writers block only other
writers and readers using serializable isolation; writers do not block readers using
read committed isolation. Read committed isolation is the default isolation level."_

This corresponds to what I know as SNAPSHOT_READ_COMMITTED, READ_COMMITTED would block until row in question would become comitted. SNAPSHOT would read the last committed value without locks or waiting.